name: Handle Incoming Changes

on:
  create:
    branches:
      - '*'

jobs:
  handle_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Log variables
        run: |
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "Base branch: main"
          echo "Head branch: ${{ github.ref }}"
          echo "Pull Request Title: Merge ${{ github.ref }} into main"
          echo "Pull Request Body: Created by GitHub action"

      - name: Create Pull Request
        run: |
          # Set variables
          REPO_OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.repository }}
          BASE_BRANCH=main
          HEAD_BRANCH=${{ github.ref }}
          TITLE="Merge ${HEAD_BRANCH} into ${BASE_BRANCH}"
          BODY="Created by GitHub action"
          TOKEN=${{ secrets.PAT_TOKEN }}

          # Log curl command (without token for security reasons)
          echo "Executing curl to create a PR from $HEAD_BRANCH to $BASE_BRANCH"
  
          # Create pull request using curl and capture the response
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/pulls \
            -d "{\"title\":\"$TITLE\",\"body\":\"$BODY\",\"head\":\"${HEAD_BRANCH}\",\"base\":\"${BASE_BRANCH}\"}")

          # Log the response from the API
          echo "Response from GitHub API: $RESPONSE"

          # Check if the PR was created successfully
          PR_URL=$(echo $RESPONSE | jq -r '.html_url')
          if [ "$PR_URL" != "null" ]; then
            echo "Pull Request created successfully: $PR_URL"
          else
            echo "Failed to create Pull Request"
            echo "GitHub API response: $RESPONSE"
            exit 1
          fi
